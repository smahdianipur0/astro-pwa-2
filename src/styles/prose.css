.prose {
  color: oklch(var(--gray-75) );
  max-width: 65ch
}

.prose :where(button):not(:where([class~=not-prose],[class~=not-prose] *)), .prose-btn {
  position: relative;
  padding:var(--default-padding);
  line-height: var(--gap-x04);
  user-select:none;
  cursor:pointer;
  border-radius:var(--radius-a);
  background-color: var(--primery-transparent);
  color: oklch(var(--gray-95) / 1);
  box-shadow: 
    1px 1.5px 1.5px oklch(65% 0.142 268.67 / 0.5) ,
    1px 2.5px 0px var(--primary-shadow) ;      
  overflow: clip;;
}

.prose :where(button:disabled):not(:where([class~=not-prose],[class~=not-prose] *)), .prose-btn:disabled {
  background: oklch(var(--gray-25) / 1);
  color:oklch(var(--gray-95) / 0.6);
     box-shadow: 
  1px 1.5px 1.5px oklch(var(--gray-50) / 0.6) ,
  1px 2.5px 0px oklch(var(--gray-25) / 0.6 ) ;
}

.prose :where(button):not(:where([class~=not-prose],[class~=not-prose] *))::before, .prose-btn::before {
  content: "";
  position: absolute;
  inset: 0;
  z-index: var(--z-layer-middle);   
  background-color: var(--glow);
  border-radius: 3ch;
  transform: scaleX(0.7) scaleY(0.4);
  filter: blur(20px);
  mix-blend-mode: overlay;
}

.prose :where(button:disabled):not(:where([class~=not-prose],[class~=not-prose] *))::before, .prose-btn:disabled::before {
  content: "";
  position: absolute;
  inset: 0;
  background-color: transparent;
}

.prose :where(button):not(:where([class~=not-prose],[class~=not-prose] *))::after, .prose-btn::after {
  content: "";
  z-index: var(--z-layer-middle);
  position: absolute;
  inset: 0;
  border-radius: var(--radius-a);
  background: linear-gradient(180deg,
   oklch(100% 0 0 / 0.15) 0%, 
   oklch(40% 0 0 / 0) 8%, 
   oklch(40% 0 0 / 0) 97%,
   oklch(100% 0 0 / 0.1) 100%);
  mix-blend-mode: overlay;
}

.prose :where(button:disabled):not(:where([class~=not-prose],[class~=not-prose] *))::after, .prose-btn:disabled::after {
  content: "";
  z-index: var(--z-layer-middle);
  position: absolute;
  inset: 0;
  background: linear-gradient(180deg,
   oklch(0% 0 0 / 0.25) 0%, 
   oklch(40% 0 0 / 0) 8%, 
   oklch(40% 0 0 / 0) 97%,
   oklch(100% 0 0 / 0.1) 100%);
  mix-blend-mode: overlay;
}

.prose :where(select):not(:where([class~=not-prose],[class~=not-prose] *)) {
  display: inline-block;
  border: 1px solid transparent;
  padding-left:var(--gap-xs); 
  padding-right:var(--gap-xs);
  border-radius: var(--radius-a);
  color: oklch(var(--gray-95) );
  background-color: oklch(var(--gray-25) / 0.8);
  text-align: center;
}

.prose :where(select):not(:where([class~=not-prose],[class~=not-prose] *)):focus{
  background-color: oklch(var(--gray-25) / 1);
  outline: 1px solid transparent;
}

.prose :where(select):not(:where([class~=not-prose],[class~=not-prose] *)):focus-visible {
  outline: Highlight auto 1px;
  outline: -webkit-focus-ring-color auto 1px;
}

.prose :where(p):not(:where([class~=not-prose],[class~=not-prose] *)) {
  margin-top: var(--gap-x04);
  margin-bottom: var(--gap-x04)
}

.prose :where(a):not(:where([class~=not-prose],[class~=not-prose] *)) {
  color: oklch(var(--gray-85) );
  text-decoration: underline;
  font-weight: 500
}

.prose :where(strong):not(:where([class~=not-prose],[class~=not-prose] *)) {
  color: oklch(var(--gray-85) );
  font-weight: 600
}

.prose :where(a strong):not(:where([class~=not-prose],[class~=not-prose] *)) {
  color: inherit
}

.prose :where(blockquote strong):not(:where([class~=not-prose],[class~=not-prose] *)) {
  color: inherit
}

.prose :where(thead th strong):not(:where([class~=not-prose],[class~=not-prose] *)) {
  color: inherit
}

.prose :where(ol):not(:where([class~=not-prose],[class~=not-prose] *)) {
  list-style-type: decimal;
  margin-top: var(--gap-x04);
  margin-bottom: var(--gap-x04);
  padding-inline-start: var(--gap-x05)
}

.prose :where(ol[type=A]):not(:where([class~=not-prose],[class~=not-prose] *)) {
  list-style-type: upper-alpha
}

.prose :where(ol[type=a]):not(:where([class~=not-prose],[class~=not-prose] *)) {
  list-style-type: lower-alpha
}

.prose :where(ol[type=A s]):not(:where([class~=not-prose],[class~=not-prose] *)) {
  list-style-type: upper-alpha
}

.prose :where(ol[type=a s]):not(:where([class~=not-prose],[class~=not-prose] *)) {
  list-style-type: lower-alpha
}

.prose :where(ol[type=I]):not(:where([class~=not-prose],[class~=not-prose] *)) {
  list-style-type: upper-roman
}

.prose :where(ol[type=i]):not(:where([class~=not-prose],[class~=not-prose] *)) {
  list-style-type: lower-roman
}

.prose :where(ol[type=I s]):not(:where([class~=not-prose],[class~=not-prose] *)) {
  list-style-type: upper-roman
}

.prose :where(ol[type=i s]):not(:where([class~=not-prose],[class~=not-prose] *)) {
  list-style-type: lower-roman
}

.prose :where(ol[type="1"]):not(:where([class~=not-prose],[class~=not-prose] *)) {
  list-style-type: decimal
}

.prose :where(ul):not(:where([class~=not-prose],[class~=not-prose] *)) {
  list-style-type: disc;
  margin-top: var(--gap-x04);
  margin-bottom: var(--gap-x04);
  padding-inline-start: var(--gap-x05)
}

.prose :where(ol>li):not(:where([class~=not-prose],[class~=not-prose] *))::marker {
  font-weight: 400;
  color: oklch(var(--gray-50) )
}

.prose :where(ul>li):not(:where([class~=not-prose],[class~=not-prose] *))::marker {
  color: oklch(var(--gray-85) )
}

.prose :where(dt):not(:where([class~=not-prose],[class~=not-prose] *)) {
  color: oklch(var(--gray-85) );
  font-weight: 600;
  margin-top: var(--gap-x04)
}

.prose :where(hr):not(:where([class~=not-prose],[class~=not-prose] *)) {
  border-color: oklch(var(--gray-15) );
  border-top-width: 1px;
  margin-top: var(--gap-x08);
  margin-bottom: var(--gap-x08)
}

.prose :where(blockquote):not(:where([class~=not-prose],[class~=not-prose] *)) {
  font-weight: 500;
  font-style: italic;
  color: olklc(var(--gray-85) );
  border-inline-start-width: var(--gap-xxs);
  border-inline-start-color: oklch(var(--gray-15) );
  quotes: "“""”""‘""’";
  margin-top: var(--gap-x05);
  margin-bottom: var(--gap-x05);
  padding-inline-start: var(--gap-x04)
}

.prose :where(blockquote p:first-of-type):not(:where([class~=not-prose],[class~=not-prose] *)):before {
  content: open-quote
}

.prose :where(blockquote p:last-of-type):not(:where([class~=not-prose],[class~=not-prose] *)):after {
  content: close-quote
}

.prose :where(h1):not(:where([class~=not-prose],[class~=not-prose] *)) {
  color: oklch(var(--gray-85) );
  font-weight: 800;
  font-size: var(--gap-x07);
  margin-top: 0;
  margin-bottom: var(--gap-x03);
  line-height: var(--gap-x04)
}

.prose :where(h1 strong):not(:where([class~=not-prose],[class~=not-prose] *)) {
  font-weight: 900;
  color: inherit
}

.prose :where(h2):not(:where([class~=not-prose],[class~=not-prose] *)) {
  color: oklch(var(--gray-85) );
  font-weight: 700;
  font-size: var(--gap-x05);
  margin-top: var(--gap-x06);
  margin-bottom: var(--gap-x04);
  line-height: var(--gap-x05)
}

.prose :where(h2 strong):not(:where([class~=not-prose],[class~=not-prose] *)) {
  font-weight: 800;
  color: inherit
}

.prose :where(h3):not(:where([class~=not-prose],[class~=not-prose] *)) {
  color: oklch(var(--gray-85) );
  font-weight: 600;
  font-size: var(--gap-x04);
  margin-top: var(--gap-x05);
  margin-bottom: var(--gap);
  line-height: var(--gap-x06)
}

.prose :where(h3 strong):not(:where([class~=not-prose],[class~=not-prose] *)) {
  font-weight: 700;
  color: inherit
}

.prose :where(h4):not(:where([class~=not-prose],[class~=not-prose] *)) {
  color: oklch(var(--gray-85) );
  font-weight: 600;
  margin-top: var(--gap-x05);
  margin-bottom: var(--gap);
  line-height: var(--gap-x05)
}

.prose :where(h4 strong):not(:where([class~=not-prose],[class~=not-prose] *)) {
  font-weight: 700;
  color: inherit
}

.prose :where(img):not(:where([class~=not-prose],[class~=not-prose] *)) {
  margin-top: var(--gap-x06);
  margin-bottom: var(--gap-x06)
}

.prose :where(picture):not(:where([class~=not-prose],[class~=not-prose] *)) {
  display: block;
  margin-top: var(--gap-x06);
  margin-bottom: var(--gap-x06)
}

.prose :where(video):not(:where([class~=not-prose],[class~=not-prose] *)) {
  margin-top: var(--gap-x06);
  margin-bottom: var(--gap-x06)
}

.prose :where(kbd):not(:where([class~=not-prose],[class~=not-prose] *)) {
  font-weight: 500;
  font-family: inherit;
  color: oklch(var(--gray-85) );
  box-shadow: 0 0 0 1px oklch(var(--gray-85) / 0.1),0 3px oklch(var(--gray-85) / 0.1);
  font-size: var(--gap-x03);
  border-radius: var(--gap-xs);
  padding-top: var(--gap-3xs);
  padding-inline-end: var(--gap-xs);
  padding-bottom: var(--gap-3xs);
  padding-inline-start: var(--gap-xs)
}

.prose :where(code):not(:where([class~=not-prose],[class~=not-prose] *)) {
  color: oklch(var(--gray-85) );
  font-weight: 600;
  font-size: var(--gap-x03)
}

.prose :where(code):not(:where([class~=not-prose],[class~=not-prose] *)):before {
  content: "`"
}

.prose :where(code):not(:where([class~=not-prose],[class~=not-prose] *)):after {
  content: "`"
}

.prose :where(a code):not(:where([class~=not-prose],[class~=not-prose] *)) {
  color: inherit
}

.prose :where(h1 code):not(:where([class~=not-prose],[class~=not-prose] *)) {
  color: inherit
}

.prose :where(h2 code):not(:where([class~=not-prose],[class~=not-prose] *)) {
  color: inherit;
  font-size: var(--gap-x03)
}

.prose :where(h3 code):not(:where([class~=not-prose],[class~=not-prose] *)) {
  color: inherit;
  font-size: var(--gap-x03)
}

.prose :where(h4 code):not(:where([class~=not-prose],[class~=not-prose] *)) {
  color: inherit
}

.prose :where(blockquote code):not(:where([class~=not-prose],[class~=not-prose] *)) {
  color: inherit
}

.prose :where(thead th code):not(:where([class~=not-prose],[class~=not-prose] *)) {
  color: inherit
}

.prose :where(pre):not(:where([class~=not-prose],[class~=not-prose] *)) {
  color: oklch(var(--gray-15) );
  background-color: oklch(var(--gray-75) );
  overflow-x: auto;
  font-weight: 400;
  font-size: var(--gap-x03);
  line-height: var(--gap-x06);
  margin-top: var(--gap-x06);
  margin-bottom: var(--gap-x06);
  border-radius: var(--gap-xs);
  padding-top: var(--gap-x03);
  padding-inline-end: var(--gap-x04);
  padding-bottom: var(--gap-x03);
  padding-inline-start: var(--gap-x04)
}

.prose :where(pre code):not(:where([class~=not-prose],[class~=not-prose] *)) {
  background-color: transparent;
  border-width: 0;
  border-radius: 0;
  padding: 0;
  font-weight: inherit;
  color: inherit;
  font-size: inherit;
  font-family: inherit;
  line-height: inherit
}

.prose :where(pre code):not(:where([class~=not-prose],[class~=not-prose] *)):before {
  content: none
}

.prose :where(pre code):not(:where([class~=not-prose],[class~=not-prose] *)):after {
  content: none
}

.prose :where(table):not(:where([class~=not-prose],[class~=not-prose] *)) {
  width: 100%;
  table-layout: auto;
  margin-top: var(--gap-x06);
  margin-bottom: var(--gap-x06);
  font-size: var(--gap-x03);
  line-height: var(--gap-x06)
}

.prose :where(thead):not(:where([class~=not-prose],[class~=not-prose] *)) {
  border-bottom-width: 1px;
  border-bottom-color: oklch(var(---gray-25) )
}

.prose :where(thead th):not(:where([class~=not-prose],[class~=not-prose] *)) {
  color: oklch(var(--gray-85) );
  font-weight: 600;
  vertical-align: bottom;
  padding-inline-end: var(--gap);
  padding-bottom:var(--gap);
  padding-inline-start: var(--gap)
}

.prose :where(tbody tr):not(:where([class~=not-prose],[class~=not-prose] *)) {
  border-bottom-width: 1px;
  border-bottom-color: oklch(var(--gray-25) )
}

.prose :where(tbody tr:last-child):not(:where([class~=not-prose],[class~=not-prose] *)) {
  border-bottom-width: 0
}

.prose :where(tbody td):not(:where([class~=not-prose],[class~=not-prose] *)) {
  vertical-align: baseline
}

.prose :where(tfoot):not(:where([class~=not-prose],[class~=not-prose] *)) {
  border-top-width: 1px;
  border-top-color: oklch(var(--gray-25) )
}

.prose :where(tfoot td):not(:where([class~=not-prose],[class~=not-prose] *)) {
  vertical-align: top
}

.prose :where(th,td):not(:where([class~=not-prose],[class~=not-prose] *)) {
  text-align: start
}

.prose :where(figure>*):not(:where([class~=not-prose],[class~=not-prose] *)) {
  margin-top: 0;
  margin-bottom: 0
}

.prose :where(figcaption):not(:where([class~=not-prose],[class~=not-prose] *)) {
  color: oklch (var(--gray-50) );
  font-size: var(--gap-x03);
  line-height: var(--gap-x05);
  margin-top: var(--gap-x03)
}

.prose {
  font-size: 100%;
  line-height: var(--gap-x06)
}

.prose :where(picture>img):not(:where([class~=not-prose],[class~=not-prose] *)) {
  margin-top: 0;
  margin-bottom: 0
}

.prose :where(li):not(:where([class~=not-prose],[class~=not-prose] *)) {
  margin-top: var(--gap);
  margin-bottom: var(--gap)
}

.prose :where(ol>li):not(:where([class~=not-prose],[class~=not-prose] *)) {
  padding-inline-start: var(--gap-xs)
}

.prose :where(ul>li):not(:where([class~=not-prose],[class~=not-prose] *)) {
  padding-inline-start: var(--gap-xs)
}

.prose :where(.prose>ul>li p):not(:where([class~=not-prose],[class~=not-prose] *)) {
  margin-top: var(--gap-x02);
  margin-bottom: var(--gap-x02)
}

.prose :where(.prose>ul>li>p:first-child):not(:where([class~=not-prose],[class~=not-prose] *)) {
  margin-top: var(--gap-x04)
}

.prose :where(.prose>ul>li>p:last-child):not(:where([class~=not-prose],[class~=not-prose] *)) {
  margin-bottom: var(--gap-x04)
}

.prose :where(.prose>ol>li>p:first-child):not(:where([class~=not-prose],[class~=not-prose] *)) {
  margin-top: var(--gap-x04)
}

.prose :where(.prose>ol>li>p:last-child):not(:where([class~=not-prose],[class~=not-prose] *)) {
  margin-bottom: var(--gap-x04)
}

.prose :where(ul ul,ul ol,ol ul,ol ol):not(:where([class~=not-prose],[class~=not-prose] *)) {
  margin-top: var(--gap-x02);
  margin-bottom: var(--gap-x02)
}

.prose :where(dl):not(:where([class~=not-prose],[class~=not-prose] *)) {
  margin-top: var(--gap-x04);
  margin-bottom: var(--gap-x04)
}

.prose :where(dd):not(:where([class~=not-prose],[class~=not-prose] *)) {
  margin-top: var(--gap);
  padding-inline-start: var(--gap-x05)
}

.prose :where(hr+*):not(:where([class~=not-prose],[class~=not-prose] *)) {
  margin-top: 0
}

.prose :where(h2+*):not(:where([class~=not-prose],[class~=not-prose] *)) {
  margin-top: 0
}

.prose :where(h3+*):not(:where([class~=not-prose],[class~=not-prose] *)) {
  margin-top: 0
}

.prose :where(h4+*):not(:where([class~=not-prose],[class~=not-prose] *)) {
  margin-top: 0
}

.prose :where(thead th:first-child):not(:where([class~=not-prose],[class~=not-prose] *)) {
  padding-inline-start: 0
}

.prose :where(thead th:last-child):not(:where([class~=not-prose],[class~=not-prose] *)) {
  padding-inline-end: 0
}

.prose :where(tbody td,tfoot td):not(:where([class~=not-prose],[class~=not-prose] *)) {
  padding-top: var(--gap);
  padding-inline-end: var(--gap);
  padding-bottom: var(--gap);
  padding-inline-start: var(--gap)
}

.prose :where(tbody td:first-child,tfoot td:first-child):not(:where([class~=not-prose],[class~=not-prose] *)) {
  padding-inline-start: 0
}

.prose :where(tbody td:last-child,tfoot td:last-child):not(:where([class~=not-prose],[class~=not-prose] *)) {
  padding-inline-end: 0
}

.prose :where(figure):not(:where([class~=not-prose],[class~=not-prose] *)) {
  margin-top: var(--gap-x06);
  margin-bottom: var(--gap-x06)
}

.prose :where(.prose>:first-child):not(:where([class~=not-prose],[class~=not-prose] *)) {
  margin-top: 0
}

.prose :where(.prose>:last-child):not(:where([class~=not-prose],[class~=not-prose] *)) {
  margin-bottom: 0
}