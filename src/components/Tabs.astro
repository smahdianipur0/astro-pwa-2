---
interface Props {
	name: string;	
	tab1: string;
	tab2: string;
	content1: string;
	content2: string;	
}

const {name, tab1 , tab2, content1, content2} = Astro.props;

---
<div class="flex-center-childs" style="flex-wrap: wrap; position: relative;">

  <input type="radio" class="tabs first-lable" name={name} id={tab1} checked />
  <input type="radio" class="tabs second-lable" name={name} id={tab2} />

  <div class="tab__indicator__bg"></div>
  <div id={name} class="tab__indicator glass"></div>
  

  <div class="tabs-content" id={content1}>
    <slot name="tab1" />
  </div>

  <div class="tabs-content" id={content2}>
    <slot name="tab2" />
  </div>

</div>

<style>

.tabs{
	appearance: none;
	-webkit-appearance: none;
	border: none;
	background-color: transparent;
	display: grid;
	height: var(--gap-x06);
	line-height: var(--gap-x05);
	width: 10ch;	
	cursor: pointer; 
	z-index: var(--z-layer-middle);
	text-align: center;
	justify-self: center;
	align-items: center;
	transition: color 200ms ease-out;
	color: oklch(var(--gray-95) / 0.5);
	margin-bottom:var(--gap-x03);
}

.tabs-content {
    display: none;
    width: 100%;
}

.tabs:checked.first-lable,
.tabs:checked.second-lable{
	color: oklch(var(--gray-95) / 1);
}

.tab__indicator {
 width: 10ch;
 position: relative;
 display: inline-block;
 justify-content: center;
 align-items: center;
 height: var(--gap-x06);
 position: absolute;
 top:0;
 background: var(--tab-indicator-bg) ;
 border-radius: 100px;
 box-shadow: inset 0.6px 0.6px 0px 0px oklch(var(--rim-light)), 
                    1px   2px   2px 0px oklch(0% 0 0 / 0.1) ;
 transition: transform 150ms var(--move);
}

.tab__indicator__bg {
 width: calc(20ch + 4px);
 display: inline-block;
 justify-content: center;
 align-items: center;
 height: calc(var(--gap-x06) + 6px);
 position: absolute;
 top:-3px;
 background-color: oklch(var(--gray-25) / 0.4);
 border-radius: 100px;
 padding: 5px;


}

</style>