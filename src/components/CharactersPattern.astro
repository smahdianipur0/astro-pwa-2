<div id="CharactersPattern" class="flex-spread-childs" style="position: relative; padding-top: var(--size-xs3);">

    <div>Pattern</div>

    <div style="display: inline-flex; 
        height: calc(var(--size-md2) - 3px); 
        position: relative;">

    <label
        id="CharactersPattern-cap-label"
        aria-label="Capitalize First Letter"
        for="CharactersPattern-cap"
        data-menu-label="capitalize"
        class="tertiary-btn first-btn"></label>

    <div class="divider" style="right: calc(var(--size-lg2) - 0.25px);"></div>

    <input
        type="checkbox"
        id="CharactersPattern-cap"
        name="pass-ops"
        data-menu="capitalize"
        class="hide-checkbox"
        checked/>

    <label
        id="CharactersPattern-num-label"
        aria-label="Add Number"
        for="CharactersPattern-num"
        data-menu-label="CharactersPattern-num"
        class="tertiary-btn middle-btn"></label>

    <div class="divider" style="right: calc((var(--size-lg2) * 2) - 0.25px);"></div>

    <input
        type="checkbox"
        id="CharactersPattern-num"
        name="pass-ops"
        class="hide-checkbox"
        checked/>

    <label
        id="CharactersPattern-special-char-label"
        aria-label="Special Character"
        for="CharactersPattern-special-char"
        data-menu-label="CharactersPattern-special-char"
        class="tertiary-btn last-btn"></label>

    <input
        type="checkbox"
        id="CharactersPattern-special-char"
        name="pass-ops"
        data-menu="add special cha"
        class="hide-checkbox"
        checked/>

  </div>
</div>


<script>
  
import { pass } from '../logic/pass';

document.getElementById("generate")!.addEventListener("CharactersPattern",(e)=>{

  if((e!.target as HTMLInputElement).matches("#CharactersPattern-special-char")){
    pass.setAddSpecialCha((e!.target as HTMLInputElement).checked)
  }
  if((e!.target as HTMLInputElement).matches("#CharactersPattern-num")){
    pass.setAddNumber((e!.target as HTMLInputElement).checked)
 
  }
  if((e!.target as HTMLInputElement).matches("#CharactersPattern-cap")){
    pass.setCapitalizeFirstLetter((e!.target as HTMLInputElement).checked)
  }

});

</script>

<style is:global>

#CharactersPattern-cap-label::after{
  content: "Abc";
}

:root:not(:has(#CharactersPattern-cap:checked)) #CharactersPattern-cap-label::after{
  content: "abc";
}

#CharactersPattern-num-label::after{
  content: "123...";
}
:root:not(:has(#CharactersPattern-num:checked))  #CharactersPattern-num-label::after{
  content: "123...";
  text-decoration: line-through;
}

#CharactersPattern-special-char-label::after{
  content: "#+@...";
}

:root:not(:has(#CharactersPattern-special-char:checked)) #CharactersPattern-special-char-label::after{
  content: "#+@...";
  text-decoration: line-through;
}
 
:root:not(:has(#CharactersPattern-cap:checked)) #CharactersPattern-cap-label,
:root:not(:has(#CharactersPattern-num:checked)) #CharactersPattern-num-label ,
:root:not(:has(#CharactersPattern-special-char:checked)) #CharactersPattern-special-char-label{
  background: oklch(var(--gray-15) / 0.3);
  color:oklch(var(--gray-95) / 0.6);
  box-shadow: none;
}

:root:not(:has(#CharactersPattern-cap:checked)) #CharactersPattern-cap-label::before ,
:root:not(:has(#CharactersPattern-num:checked))  #CharactersPattern-num-label::before ,
:root:not(:has(#CharactersPattern-special-char:checked)) #CharactersPattern-special-char-label::before {
  content: "";
  background: linear-gradient(to bottom, oklch(45% 0 0 / 0.4) 0%, oklch(100% 0 0 / 0) 180%) border-box;
}


.first-btn,.first-btn::before, .first-btn::after{
	border-top-right-radius: 0;
	border-bottom-right-radius: 0;
  border-right: 0;
}

.last-btn,.last-btn::before, .last-btn::after{
	border-top-left-radius: 0;
	border-bottom-left-radius: 0;
  border-left: 0;
}

.middle-btn, .middle-btn::before, .middle-btn::after{
	border-radius: 0;
  border-right: 0;
  border-left: 0;
}

:root:has(#CharactersPattern-cap:focus-visible) #CharactersPattern-cap-label,
:root:has(#CharactersPattern-num:focus-visible)  #CharactersPattern-num-label ,
:root:has(#CharactersPattern-special-char:focus-visible) #CharactersPattern-special-char-label {
	outline: Highlight auto 1px;
  outline: -webkit-focus-ring-color auto 1px;
}

</style>