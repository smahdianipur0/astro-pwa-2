---
import Card from "../components/Card.astro";

---

<div style="
display: flex; 
flex-direction: column; 
align-items: center; 
gap: var(--gap-x04); 
margin-inline: var(--gap-x04)
height: 85%;
overflow-y: scroll;
padding-top: var(--gap-x02);
padding-inline: var(--gap-x02);">

  <Card iden="entries-list-card" >
  <div style="display: flex; flex-direction: column;" class="prose" id="input-group">
    <input type="text" id="titleInput" placeholder="Title" style="margin-bottom: var(--gap-x03);"/>
    <div style="display: flex; flex-direction: row;">
      <input id="auto-pass-entry" type="checkbox" style="
      margin-top: var(--gap-x03); 
      margin-bottom: var(--gap-x03);"> 
      <label style="
      place-self: center; 
      margin-left: var(--gap);
      margin-top: var(--gap-x03);
      margin-bottom: var(--gap-x03);" for="auto-pass-entry">Enter Password Manually</label>
    </div>
    <input type="text" id="passwordInput" placeholder="Password" readonly />
    
    <button style="margin-top: var(--gap-x03);"id="addEntryButton">Add</button>
  </div>
  </Card>

  <div class="entries-list" id="entries-list"></div>

</div>

<script src="../components/drawerContent.ts"></script> 


<style is:global>
  .entries-list{
    display: flex;
    flex-direction: column;
    width: 100%;
    align-items: center;
  }
  
  .entry-item{
    display: flex;
    place-content: space-between;
    width: min(100%, 65ch);
    background-color: oklch(var(--gray-15) / 1);
    border-radius: 0;
    padding: var(--default-padding);
    margin: 0 1ch;
    position: relative;
  }

  .entries-list > :first-child{
    border-top-left-radius: var(--radius-b);
    border-top-right-radius: var(--radius-b);
    margin-top: 1ch;
  }

  .entries-list > :last-child{
    border-bottom-left-radius: var(--radius-b);
    border-bottom-right-radius: var(--radius-b);
    margin-bottom: var(--gap-x06);
  }

  .entries-list > :last-child::after{
    content: 'tap on passwords to copy';
    position: absolute;
    bottom: 0;
    transform: translateY(var(--gap-x06));
    font-size: var(--small-font);
    color: oklch(var(--gray-50) / 1);
  }

  .entries-list > :not(:last-child){
    border-bottom:1px solid oklch(var(--gray-25) / 1);
  }

  .s-container  {
  display: flex;
  justify-content: flex-end;
  align-items: center;
  }

details {
  margin: 0;
  position: relative;
  display: inline-block;
}

details summary::-webkit-details-marker {
  display: none;
}

summary {
  display: flex;
  position: relative;
  cursor: pointer;
  user-select: none;
  min-width: max-content;
  align-items: center;
}

@keyframes details-show {
  from {
    opacity: 0;
    transform: translateY(-50%) translateX(0.5em);
  }
  to {
    opacity: 1;
    transform: translateY(-50%) translateX(0);
  }
}

details[open] > *:not(summary) {
  animation: details-show 150ms ease-in-out forwards;
}

summary::before {
  content: '🗑️';
  color: var(--danger);
  font-size: 100%;
}

details[open] > summary::before {
  content: 'Cancel';
  color: oklch(var(--gray-95) / 1);
  font-size: var(--small-font);
}

details[open] > .s-container {
  width: 10ch;
}



.delete-button {
  margin-inline: 1ch;
  color: var(--danger);
  font-size: var(--small-font);
}

details[open] .delete-button {
  position: absolute;
  right: 100%;
  top: 50%;
  transform: translateY(-50%);
  margin-right: var(--gap);
}

</style>
