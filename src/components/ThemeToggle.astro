<input 
    type="checkbox"
    class="max-width flex-spread-childs" 
    aria-label="theme toggle" 
    id="theme-toggle"   
    name="theme"
    style="appearance: none;
    -webkit-appearance: none;
    cursor: pointer;
    background-color: transparent;
    height: var(--size-sm4);" > 


<script>
  
const params: URLSearchParams = new URLSearchParams(window.location.search);

function updateURL(): void {
  params.set(
    "theme",
    (document.getElementById("theme-toggle")! as HTMLInputElement).checked.toString(),
  );
  window.history.replaceState({}, "", `${window.location.pathname}?${params}`);
}

function getCheckboxState(id: string): boolean {
  return params.get(id) === "true";
}

const checkboxElementOne: HTMLInputElement = document.getElementById(
  "theme-toggle",
) as HTMLInputElement;
checkboxElementOne.checked = getCheckboxState("theme");
checkboxElementOne.addEventListener("change", updateURL);

</script>


<style>

#theme-toggle::before{
  color:oklch(var(--gray-95) / 1);
  content: 'Change Theme:';
} 

#theme-toggle::after {
  color:oklch(var(--gray-95) / 1);
  content: '‚òÄÔ∏è';
}

	

:root:has(#theme-toggle:checked) #theme-toggle:after {
  content: 'üåô'; 
}

@media (prefers-color-scheme:light) {

  #theme-toggle::after {
    color:oklch(var(--gray-95) / 1);
    content: 'Change Theme: üåô';
  }

  :root:has(#theme-toggle:checked) #theme-toggle::after {
    content: 'Change Theme: ‚òÄÔ∏è'; 
  }

}

</style>
