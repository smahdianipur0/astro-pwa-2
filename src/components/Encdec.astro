---
import Tabs from '../components/ui/Tabs.astro';
---

<Tabs name="encdec" tab1Label="Encrypt" tab2Label="Decrypt" >
   <fragment class="prose" style="color: oklch(var(--gray-95) );" slot="tab1">

      <textarea 
         id="plain_text" 
         class=" dent-shadow" 
         style="margin-top: var(--size-sm1); margin-bottom: var(--size-sm3);" 
         rows="2" 
         placeholder="Plain Text"></textarea>

      <label 
         style=" margin-bottom: var(--size-sm0); font-size: var(--font-sm1); opacity: 0.6;">
         Encrypted Text : </label>

      <button 
         class="not-prose max-width text-as-button" 
         style="word-wrap: break-word; text-align:justify;" 
         id="result_e"></button>

   </fragment>


   <fragment class="prose" style="color: oklch(var(--gray-95) );" slot="tab2">

      <textarea 
         id="cipher_text" 
         rows="2" 
         placeholder="Cipher Text"
         style="margin-top: var(--size-sm1); margin-bottom: var(--size-sm3);"></textarea>

      <label 
         style="margin-bottom: var(--size-sm0); font-size: var(--font-sm1); opacity: 0.6;">
         Decrypted Text :</label>

      <button 
         class="not-prose max-width text-as-button" 
         style="word-wrap: break-word; text-align:justify;"
         id="result_d"></button>

   </fragment>
</Tabs>

<script>

import { showToast } from "../logic/misc.ts";
import { pass } from '../logic/pass';

// plain and cipher text input
document.getElementById("encryption")!.addEventListener("input",(e)=>{
   if((e!.target as HTMLInputElement).matches("#plain_text")){
      const value = (e!.target as HTMLInputElement).value;
      pass.setPlainText(value.toString());
   }

   if((e!.target as HTMLInputElement).matches("#cipher_text")){
      const value = (e!.target as HTMLInputElement).value;
      pass.setCipherText(value.toString())
   }
   
});

// dispaly encrypted text
pass.on(["resultE"], pl => {
   document.getElementById("result_e")!.textContent = pl.value;

   if (pl.value === "") {
      document.getElementById("result_e")!.textContent = "Enter Plain Text";
   }
});

// dispaly decrypted text
pass.on(["resultD"], pl => {
   document.getElementById("result_d")!.textContent = pl.value;

   if (pl.value === "") {
      document.getElementById("result_d")!.textContent = "Enter Cipher Text";
   }
});

// disable copying false encrypted results
pass.on(["resultE"], pl => {
   if(pl.value !== "IV is not 16 Characters" &&
      pl.value !== "Key is not 16 Characters" &&
      pl.value !== "") {
      (document.getElementById("result_e")! as HTMLInputElement).disabled  = false;
   } else{
      (document.getElementById("result_e")! as HTMLInputElement).disabled  = true;
   }
})

// disable copying false decrypted results
pass.on(["resultD"], pl => {
   if(pl.value !== "IV is not 16 Characters" &&
      pl.value !== "Key is not 16 Characters" &&
      pl.value !== "Invalid Credentials"&&
      pl.value !== "") {
      (document.getElementById("result_d")! as HTMLInputElement).disabled  = false;
   } else{
      (document.getElementById("result_d")! as HTMLInputElement).disabled  = true;
   }

})

// copy encryption and decryption
document.getElementById("encryption")!.addEventListener("click",(e)=>{
   if((e!.target as HTMLInputElement).matches("#result_e") &&
      ((document.getElementById("result_e")! as HTMLInputElement).disabled  === false )){
      navigator.clipboard.writeText(pass.get("resultE"));  
      showToast();
   }

   if((e!.target as HTMLInputElement).matches("#result_d") &&
      ((document.getElementById("result_d")! as HTMLInputElement).disabled  === false )){
      navigator.clipboard.writeText(pass.get("resultD"));  
      showToast();
   }
});


</script>