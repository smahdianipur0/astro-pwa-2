---
import ThemeToggle from '../components/ThemeToggle.astro';
---
<fieldset class="box-shadow" id="key-IV">
  <legend>Key and IV</legend>

  <form autocomplete="off">
    <div style="position: relative;">

      <input
        id="key"
        type="text"
        class="input-group-top glass"
        name="Key"
        placeholder="Key"/>

      <span id="key_indic" class="key-indicator"></span> 

    </div>

    <div style="position: relative; margin-bottom: var(--size-sm3);">

      <input
        id="iv"
        type="text"
        class="input-group-bottom glass"
        name="IV"
        placeholder="IV"/>

      <span id="iv_indic" class="key-indicator"></span>

    </div>
  </form>

  <!-- <button id="test">test</button> -->
</fieldset>

<div class="entries-list">
  <div class="menu-item">
    <ThemeToggle />
  </div>
</div>


<style>


.key-indicator {
  line-height: var(--size-sm4);
  position: absolute;
  right: var(--size-sm2);
  top: 50%;
  transform: translateY(-50%);
  color: #777;
  pointer-events: none;

}


</style>

<script>

// import queryHelper  from "../utils/query-helper"
// import { trpc } from "../utils/trpc";

// type serverRespone = {message:string; [key:string]: unknown}  | undefined
// document.getElementById("key-IV")!.addEventListener("click", (e) => {
//   if ((e!.target as HTMLInputElement).matches("#test")) {
//     (async () => {
//     const [data, error] = await queryHelper.direct("db", () => trpc.dbquery.mutate()) as [serverRespone, serverRespone];
//     console.log(data?.message ?? error?.message ?? "");
//     })();
//   }
// });

import {count_characters } from "../pkg/rust_lib";
import { pass } from '../logic/pass';

document.getElementById("key-IV")!.addEventListener("input",(e)=>{
   if((e!.target as HTMLInputElement).matches("#key")){
      const value = (e!.target as HTMLInputElement).value;
      pass.setKey(value.toString())
      document.getElementById("key_indic")!.textContent = count_characters(pass.get("key")).toString();
   }
   if((e!.target as HTMLInputElement).matches("#iv")){
      const value = (e!.target as HTMLInputElement).value;
      pass.setIV(value.toString())
      document.getElementById("iv_indic")!.textContent = count_characters(pass.get("iv")).toString();
   }
});

</script>