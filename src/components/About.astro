---
import ThemeToggle from '../components/ThemeToggle.astro';
import Card from './ui/Card.astro';
// import Tabstest from './ui/Tabstest.astro';
---

<Card title = "Key and IV" iden='key-IV'>
  <form autocomplete="off">

    <div style="position: relative;">
      <input id="key" type="text" class="input-group-top glass" name="Key" placeholder="Key">
      <span id="key_indic" class="key-indicator"></span>
    </div>
  
    <div style="position: relative; margin-bottom: var(--gap-x04);">
      <input id="iv" type="text" class="input-group-bottom glass" name="IV" placeholder="IV">
      <span id="iv_indic" class="key-indicator"></span>
    </div>
    
  </form>
  <!-- <button id="test">test</button> -->
</Card>

<div class="entries-list"> <div class="menu-item" >  <ThemeToggle/> </div></div>

<!--   <Tabstest
  name="encdec-tool"      
  tab1Id="encrypt-tab"    
  tab1Label="Encrypt"
  content1Id="encrypt-panel"
  tab2Id="decrypt-tab"     
  tab2Label="Decrypt"
  content2Id="decrypt-panel" 
  initialCheckedId="encrypt-tab"
>

  <fragment slot="tab1" class="panel">
    <label for="plain_text_input">Plain Text:</label>
    <textarea id="plain_text_input" rows="3" placeholder="Type..." style="width:100%;"></textarea>
  </fragment>


  <fragment slot="tab2" class="panel">
    <label for="cipher_text_input">Cipher Text:</label>
    <textarea id="cipher_text_input" rows="3" placeholder="Paste..." style="width:100%;"></textarea>
  </fragment>
</Tabstest> 
 -->






<style is:global>

.input-group-top{
  border: none;
  border-bottom-left-radius: 0;
  border-bottom-right-radius: 0;
  border-bottom: 0.1px solid oklch(var(--gray-25) );
  line-height: var(--gap-x05);
}

.input-group-top:focus{
  border: none;
  border-bottom-left-radius: 0;
  border-bottom-right-radius: 0;
  border-bottom: 0.1px solid oklch(var(--gray-25) );
  background: transparent;
  background-color:oklch(var(--gray-10) / 0.75); 
}

.input-group-bottom{
  border: none;
  border-top-left-radius: 0;
  border-top-right-radius: 0;
  border-bottom-left-radius: var(--radius-a);
  border-bottom-right-radius: var(--radius-a);
  line-height: var(--gap-x05);
}
 
.input-group-bottom:focus{
  border: none;
  border-top-left-radius: 0;
  border-top-right-radius: 0;
  background: transparent;
  background-color:oklch(var(--gray-10) / 0.75); 
}

.key-indicator {
  line-height: var(--gap-x05);
  position: absolute;
  right: var(--gap-x03);
  top: 50%;
  transform: translateY(-50%);
  color: #777;
  pointer-events: none;

}

/* #credentials{
  --border: var( --success-border )
} */

</style>

<script>

import queryHelper  from "../utils/query-helper"
import { trpc } from "../utils/trpc";

type serverRespone = {message:string; [key:string]: unknown}  | undefined
document.getElementById("key-IV")!.addEventListener("click", (e) => {
  if ((e!.target as HTMLInputElement).matches("#test")) {
    (async () => {
    const [data, error] = await queryHelper.direct("db", () => trpc.dbquery.mutate()) as [serverRespone, serverRespone];
    console.log(data?.message ?? error?.message ?? "");
    })();
  }
});

</script>