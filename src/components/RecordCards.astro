<div id="RecordCards-list">
    <div class="skeleton"></div>
</div>

<script>

import { el } from "../utils/elementUtils";
import { records } from "../logic/records"  

records.on(["selectedVault"], pl => {records.updateCardsList()})

records.on(["cardsList"], ({value}) => { (async () => {

    const fragment = document.createDocumentFragment();
    const cardsArray = document.getElementById("RecordCards-list")!;
    cardsArray.textContent = "";
    
    const availableCards = (value ?? []).filter(item => item.status === "available");

    availableCards.sort((a, b) => new Date(b.updatedAt).getTime() - new Date(a.updatedAt).getTime())
    .forEach((entry) => {

      fragment.append(
      	el.c('fieldset', { className: "box-shadow", style:"margin-block: var(--size-sm3);", append:[
        	el.c('div',  { className: "not-prose", append: [
         		el.c('div', { className: 'flex-spread-childs', 
         		style:"border-bottom: 1px solid oklch(var(--gray-25) / 1); padding-bottom: var(--size-sm1);margin-bottom: var(--size-sm1);", append: [

		            el.c('p', { className: 'ellipsis', 
		              style: "width: 20ch; font-weight: 600; font-style: italic;",
		              textContent: entry.name || 'untitled' 
		          	}),

	            	el.c('div', {className: 's-container',append: [

			            el.c('details', { 
			              name: 'delete-item', 
			              className: 'right-to-left',
			              append: [
			                el.c('summary',{ className: 'right-to-left' }), 
			                el.c('button', { dataset: {action: 'delete'},
			                  id: entry.id ?? '',
			                  textContent: ' Delete'}),
			              ]
			            }),

			            el.c('button', { dataset: {action: 'update'},
			            	id: entry.id ?? '', 
			            	append: [
			              el.d("svg", { style: "width: var(--size-sm3); height: var(--size-sm3);",viewBox: "0 0 24 24", fill: "none",append: 
			                el.d("path", {d: "M21.03 2.97a3.578 3.578 0 0 1 0 5.06L9.062 20a2.25 2.25 0 0 1-.999.58l-5.116 1.395a.75.75 0 0 1-.92-.921l1.395-5.116a2.25 2.25 0 0 1 .58-.999L15.97 2.97a3.578 3.578 0 0 1 5.06 0ZM15 6.06 5.062 16a.75.75 0 0 0-.193.333l-1.05 3.85 3.85-1.05A.75.75 0 0 0 8 18.938L17.94 9 15 6.06Zm2.03-2.03-.97.97L19 7.94l.97-.97a2.079 2.079 0 0 0-2.94-2.94Z"})
			              })
			            ]}),

		          	]})

          		]}),


	       el.c('div', { style:"display: flex; flex-direction: column;", append: 
					(entry.data ?? []).map((dataItem) => {
				    return el.c('button', { dataset: {action: 'copy'},
				    	textContent: dataItem,
				    	className: 'ellipsis',
				    	style:"text-align: start; width: var(--size-xl2); font-weight: 200",
				    });
				  })
				}),
        	]}),
        ]}),
      );
    });

    cardsArray.append(fragment);

})();});

</script>