---
import Auth from './Auth.astro'
import VaultMenu from './VaultMenu.astro'
import AddCardDialog from './AddCardDialog.astro'
import RecordCards from './RecordCards.astro'
---

<fieldset class="box-shadow" id="Records"> <legend>credentials</legend>

    <Auth/>

    <div class="flex-spread-childs max-width" style="margin-block: var(--size-sm0);">
        <div class="flex-spread-childs max-width" >
            <label style="color: oklch(var(--gray-95))"  for="Records-vaults">Vaults</label>
            <select id="Records-vaults" name="vaults" disabled></select>
        </div>

        <VaultMenu/>
    </div>

</fieldset>

<AddCardDialog/>

<RecordCards/>


<script>


import { records } from "../logic/records"

// bind valut select elment value
document.getElementById("Records")!.addEventListener("change",(e)=>{
    if((e!.target as HTMLInputElement).matches("#Records-vaults")){
        records.setSelectedVault((e!.target as HTMLInputElement).value);
    };
});

records.on(["selectedVault"], ({value}) => {
  (document.getElementById("Records-vaults") as HTMLSelectElement).value = value
});


records.on(["vaultsList"], ({value}) => {
    const vaultlist = document.getElementById("Records-vaults") as HTMLSelectElement
    vaultlist.textContent = "";
    vaultlist.disabled = false;

    const options = (value ?? [])
        .filter(item => item.status === "available")
        .sort((a, b) => new Date(b.updatedAt).getTime() - new Date(a.updatedAt).getTime())
        .map(entry => {
            const opt = document.createElement("option");
            opt.textContent = entry.name;
            return opt
        })

    vaultlist.replaceChildren(...options);

    const selectVault = document.getElementById("Records-vaults") as HTMLSelectElement;
    if (selectVault){ records.setSelectedVault(selectVault.options[0]?.value)}
});

records.updateVaultsList();


</script>
