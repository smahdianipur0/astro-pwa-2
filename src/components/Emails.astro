<fieldset class="box-shadow" id="emails" >
    <legend>Frequently Used Emails</legend>

    <div
        class="prose"
        style="display: flex; 
        gap: var(--size-sm0); 
        justify-content: space-between;">

        <input
            autocomplete="off"
            id="email_entry"
            type="text"
            style="width: 100%;"
            placeholder="Email" />

        <button 
            id="add_email" 
            style="width: fit-content; 
            white-space: nowrap;" disabled > 
            Add</button>
    </div>

    <div
        class="entries-list not-prose"
        id="emails-list"
        style="padding-top: var(--size-sm3); height: 100%;">

        <div class="entry-item" style="background-color: transparent; padding-inline: 0px;">
            <button
                data-action="copy"
                class="ellipsis shiny-text"
                style="text-align: start; width: var(--size-xl2);">
                name@gmail.com</button>

            <div class="s-container">
                <details  name="delete-item" class="right-to-left">
                    <summary class="right-to-left shiny-text"></summary>
                </details>
            </div>
        </div>

        <div class="entry-item" style="background-color: transparent; padding-inline: 0px;">
            <button
                data-action="copy"
                class="ellipsis shiny-text"
                style="text-align: start; width: var(--size-xl2);">
                name@yahoo.com</button>

            <div class="s-container">
                <details name="delete-item" class="right-to-left">
                    <summary class="right-to-left shiny-text"></summary>
                </details>
            </div>
        </div>

        <div class="entry-item" style="background-color: transparent; padding-inline: 0px;">
            <button
                data-action="copy"
                class="ellipsis shiny-text"
                style="text-align: start; width: var(--size-xl2);">
                name@outlook.com</button>

            <div class="s-container">
                <details name="delete-item" class="right-to-left">
                    <summary class="right-to-left shiny-text"></summary>
                </details>
            </div>
        </div>
    </div>
</fieldset>

<script>

import { createSignal, createEffect } from 'solid-js';
import { dbCreate, dbReadAll, dbDelete , type ReadAllResultTypes} from "../utils/surrealdb-indexed";
import { element } from "../utils/elementUtils";
import { showToast } from "../logic/misc.ts";

const [emailEntery, setEmailEntery] = createSignal("");
const [emailList, setEmaillist] = createSignal<ReadAllResultTypes["Emails"]>([]);


document.getElementById("emails")!.addEventListener("input",(e)=>{
    if((e!.target as HTMLInputElement).matches("#email_entry")){
       const value = (e!.target as HTMLInputElement).value;
       setEmailEntery(value.toString());
       if(emailEntery() === "") {
        (document.getElementById("add_email")! as HTMLInputElement).disabled  = true;  
         } else {
        (document.getElementById("add_email")! as HTMLInputElement).disabled  = false; 
     } 
    }
});



document.getElementById("emails")!.addEventListener("click", (e) => {
  if ((e!.target as HTMLInputElement).matches("#add_email")) {
    (async () => {
      await dbCreate("Emails:create", {email:emailEntery(), crreatedAt: new Date().toISOString()})
      setEmaillist((await dbReadAll("Emails") ) ?? []);
    })();
  }

  const deleteButton = (e!.target as HTMLInputElement).closest("[data-action='delete']");
  if (deleteButton) {
    (async () => {
      await dbDelete("Emails:delete", deleteButton.id);
      setEmaillist((await dbReadAll("Emails") ) ?? []);
    })();
  }

  const copyButton = (e!.target as HTMLInputElement).closest("[data-action='copy']");
  if (copyButton) {
    (async () => {
      navigator.clipboard.writeText(copyButton.id);  
       showToast();
    })();
  }
});


setEmaillist((await dbReadAll("Emails") ) ?? []);

createEffect(() => {
  setEmailEntery("");
  (document.getElementById("email_entry") as HTMLInputElement).value = "";
  (document.getElementById("add_email") as HTMLInputElement).disabled = true;
  document.getElementById("emails-list")!.textContent = '';
  const fragment = document.createDocumentFragment();
  
  (emailList() ?? [])
  .sort((a, b) => new Date(b.crreatedAt).getTime() - new Date(a.crreatedAt).getTime())
  .forEach((entry) => {
    fragment.append(
      element.configure('div', { className: 'entry-item',
        style: 'background-color:transparent; padding-inline: 0;',
        append: [

          element.configure('div', { append: [
              element.configure('button', { dataset: {action: 'copy'}, 
                className: 'ellipsis',
                style:"text-align: start; width: var(--size-xl2); color: oklch(var(--gray-95))",
                id: entry.email ?? '',
                textContent: entry.email ?? ''
              })
          ]}),

          element.configure('div', {className: 's-container', append: [
            element.configure('details', {name: 'delete-item',className: 'right-to-left', append: [
              element.configure('summary', { className: 'right-to-left' }),
              element.configure('button', { dataset: {action: 'delete' },
                  id: entry.id?.id ?? '',
                  textContent: ' Delete'
                })
            ]})
          ]})
        ]
      })
    );
  });
  
  document.getElementById("emails-list")!.append(fragment);
});


</script>

<style is:global>



#emails-list > :last-child::after {
  content: 'tap on email to copy';
  position: absolute;
  bottom: 0;
  transform: translateY(var(--size-md2));
  font-size: var(--font-sm1);
  color: oklch(var(--gray-50) / 1);
}

</style>
