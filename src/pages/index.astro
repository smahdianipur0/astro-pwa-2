---
import Layout from '../layouts/Layout.astro';
import Card from '../components/Card.astro';
import Generate from '../components/Generate.astro'; 
import Encdec from '../components/Encdec.astro';
import Varification from '../components/Varification.astro';
import GenerateQR from '../components/GenerateQR.astro'; 
import VarificationOnly from '../components/VarificationOnly.astro';
import About from '../components/About.astro';

---

<Layout title="Generate and encrypt Passwords">



<div class="tab-content one" > 
  <div class="grid-layout">
     
	<Card title = "Generate Password" iden='generate'>
		<Generate/>
	</Card>	

	<Card title = "Encryption and Decryption" iden='encryption'>
		<Encdec/>
	</Card>

	<Card title = "Varification Code" iden='varification'>
		<Varification/> 
 	</Card>  

  </div> 
</div>

<div class="tab-content two">
	<div class="grid-layout"> 

		<Card title = "Generate QR Code" iden='generateQR'>
			<GenerateQR/> 
 		</Card> 

	</div>
</div>

<div class="tab-content three"> 
	<div class="grid-layout" > 

		<Card title = "Varification Code" iden='varificationOnly'>
			<VarificationOnly/> 
 		</Card> 

	</div>
</div>

<div class="tab-content four"> 
    <About/>
</div>
    
</Layout>

<script src="../components/signals.ts"></script>

<script>
	
const params: URLSearchParams = new URLSearchParams(window.location.search);

function updateURL(): void {
	params.set(
		"theme",
		(document.getElementById("theme-toggle")! as HTMLInputElement).checked.toString(),
	);
	window.history.replaceState({}, "", `${window.location.pathname}?${params}`);
}

function getCheckboxState(id: string): boolean {
	return params.get(id) === "true";
}

const checkboxElementOne: HTMLInputElement = document.getElementById(
	"theme-toggle",
) as HTMLInputElement;
checkboxElementOne.checked = getCheckboxState("theme");
checkboxElementOne.addEventListener("change", updateURL);




function updateURLForRadios(): void {
	if (document.querySelector('input[name="tab"]:checked')) {
		params.set(
			"tab",
			(document.querySelector('input[name="tab"]:checked') as HTMLInputElement).id,
		);
	}

	window.history.replaceState({}, "", `${window.location.pathname}?${params}`);
}

function setInitialRadioStates(): void {
	const tabValue = params.get("tab");

	if (tabValue) {
		const tabRadioToCheck = document.querySelector(
			`input[name="tab"][id="${tabValue}"]`,
		) as HTMLInputElement;
		if (tabRadioToCheck) {
			tabRadioToCheck.checked = true;
		}
	}
}

setInitialRadioStates();

const allTabRadios = document.querySelectorAll('input[name="tab"]');
allTabRadios.forEach((radio) => {
	radio.addEventListener("change", updateURLForRadios);
});

</script>

<style>
	
.grid-layout {
/* 	margin: var(--portion) 1ch; */
	display: grid;
	gap:var(--bigger-gap);
	grid-template-columns: repeat(auto-fit, clamp(200px, 350px, 100% ) )  ;
	justify-content: center;
	padding-bottom: calc( var(--bigger-portion) + var(--bigger-gap)) ;
}

</style>